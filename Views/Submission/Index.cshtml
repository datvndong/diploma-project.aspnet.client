@using CentralizedDataSystem.Models;
@using CentralizedDataSystem.Resources;
@{
    Layout = "~/Views/Shared/MainLayout.cshtml";

    int currPage = ViewBag.CurrPage;
    int totalPages = ViewBag.TotalPages;

    string submissionData = ViewBag.SubmissionData;
    string formData = ViewBag.FormData;
    string path = ViewBag.Path;

    bool isAdmin = false;
    if (ViewBag.User != null) {
        User user = ViewBag.User;
        isAdmin = user.IsAdmin;
    }
}

@Styles.Render("~/Content/pagination.css")
<div class="main-panel">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-lg-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Submissions Table</h4>
                        <p class="card-description">
                            Form: <code style="font-size: 100%" id="form-name"></code>
                        </p>
                        @if (isAdmin) {
                            <a href="@Url.Action(Keywords.INDEX, Keywords.EXPORT, new { path = path, type = Keywords.JSON })" class="btn btn-dark btn-fw">
                                <i class="mdi mdi-download"></i>Export JSON
                            </a>
                            <a href="@Url.Action(Keywords.INDEX, Keywords.EXPORT, new { path = path, type = Keywords.CSV })" class="btn btn-primary btn-fw">
                                <i class="mdi mdi-download"></i>Export CSV
                            </a>
                        }
                        <div class="table-responsive">
                            <table id="submissions-table" class="table table-striped"></table>
                        </div>
                        <div class="pagination" id="pagination"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="pagination" id="pagination"></div>
        </div>
    </div>
</div>
@Scripts.Render("~/Scripts/pagination.js")
<script>
    const submissionData = JSON.parse("@submissionData".replace(/&quot;/g, '"'));
    const formData = JSON.parse("@formData".replace(/&quot;/g, '"'));
  	const path = "@path";

    const serverURL = `${window.location.protocol}//${window.location.hostname}:${window.location.port}`;
    createPagination(@totalPages, @currPage, `${serverURL}/Submission/Index/${path}/`);

  	function buildResultSelectBoxes(boxes) {
  		let resultStr = '';
  		for (item in boxes) {
  			if (boxes[item]) {
  				resultStr += `${item}, ` ;
  			}
  		}
  		return resultStr.substring(0, resultStr.length - 2); // remove comma of last index of string
  	}

  	$('#form-name').html(formData.title);

	let str = '<thead><tr><th>#</th>';
	for (comp of formData.components) {
		if (!(comp.inputType == 'password') && comp.key != 'submit'){
			str += `<th>${comp.label}</th>`;
		}
	}
	str += '</tr></thead><tbody>';
	let count = 1;
	for (submission of submissionData) {
		str += `<tr><td>${count++}</td>`;
		const data = submission.data;

		for (comp of formData.components) {
			if (!(comp.inputType === 'password') && comp.key !== 'submit'){
				let value = data[comp.key];
				if (typeof value === 'undefined') {
					value = '';
				} else if (comp.type === 'selectboxes') {
					value = buildResultSelectBoxes(value);
				} else if (typeof value === 'boolean') {
					value = value ? 'Yes' : 'No';
				}
				str += `<td>${value}</td>`;
			}
		}
		str += '</tr>'
	}
	str += '</tbody>';

	$('#submissions-table').html(str);
</script>
